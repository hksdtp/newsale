#!/usr/bin/env node

/**
 * üîß RESTORE TASKS AND FIX CONTEXT
 * Kh√¥i ph·ª•c tasks v√† fix function context
 */

async function restoreTasksAndFixContext() {
  console.log('üîß Kh√¥i ph·ª•c tasks v√† fix context function...\n');

  console.log('üìù SQL c·∫ßn ch·∫°y trong Supabase SQL Editor:\n');
  console.log('='.repeat(80));
  
  console.log('-- üîß 1. FIX CONTEXT FUNCTIONS (L·∫¶N CU·ªêI)');
  console.log(`
-- Fix function set_user_context
CREATE OR REPLACE FUNCTION set_user_context(user_uuid UUID)
RETURNS void AS $$
BEGIN
  -- Set a custom setting that can be used in RLS policies
  -- S·ª≠ d·ª•ng session-level setting (false parameter)
  PERFORM set_config('app.current_user_id', user_uuid::text, false);
  
  -- Debug log
  RAISE NOTICE 'set_user_context: set user_id = %', user_uuid;
  
  -- Verify setting was set
  RAISE NOTICE 'set_user_context: verify setting = %', current_setting('app.current_user_id', true);
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Fix function get_current_user_id_from_context
CREATE OR REPLACE FUNCTION get_current_user_id_from_context()
RETURNS UUID AS $$
DECLARE
  user_id_text TEXT;
  user_id UUID;
BEGIN
  -- L·∫•y user ID t·ª´ custom setting
  BEGIN
    user_id_text := current_setting('app.current_user_id', false);
  EXCEPTION WHEN OTHERS THEN
    -- N·∫øu setting kh√¥ng t·ªìn t·∫°i, th·ª≠ v·ªõi missing_ok = true
    BEGIN
      user_id_text := current_setting('app.current_user_id', true);
    EXCEPTION WHEN OTHERS THEN
      user_id_text := NULL;
    END;
  END;
  
  -- Debug log
  RAISE NOTICE 'get_current_user_id_from_context: user_id_text = "%"', user_id_text;
  
  -- N·∫øu kh√¥ng c√≥ ho·∫∑c r·ªóng, tr·∫£ v·ªÅ NULL
  IF user_id_text IS NULL OR user_id_text = '' OR user_id_text = 'null' THEN
    RAISE NOTICE 'get_current_user_id_from_context: returning NULL (empty or null)';
    RETURN NULL;
  END IF;
  
  -- Convert text to UUID
  BEGIN
    user_id := user_id_text::UUID;
    RAISE NOTICE 'get_current_user_id_from_context: converted UUID = %', user_id;
    RETURN user_id;
  EXCEPTION WHEN OTHERS THEN
    RAISE NOTICE 'get_current_user_id_from_context: conversion failed for "%"', user_id_text;
    RETURN NULL;
  END;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Grant permissions
GRANT EXECUTE ON FUNCTION set_user_context(UUID) TO authenticated, anon;
GRANT EXECUTE ON FUNCTION get_current_user_id_from_context() TO authenticated, anon;
`);

  console.log('-- üîß 2. T·∫†O L·∫†I TEST TASKS');
  console.log(`
-- T·∫°o l·∫°i test tasks cho Nguy·ªÖn M·∫°nh Linh
INSERT INTO tasks (
  name, description, created_by_id, assigned_to_id, 
  status, priority, work_type, department
) VALUES 
(
  'Task Test 1 - Nguy·ªÖn M·∫°nh Linh (Restored)', 
  'Task test ƒë∆∞·ª£c t·∫°o l·∫°i sau khi debug - t·ª± t·∫°o v√† t·ª± l√†m', 
  '3e1aa0d1-d98a-4eb5-b8ff-5e8956757535', 
  '3e1aa0d1-d98a-4eb5-b8ff-5e8956757535', 
  'pending', 'medium', 'other', 'HN'
),
(
  'Task Test 2 - Nguy·ªÖn M·∫°nh Linh (Restored)', 
  'Task test th·ª© 2 ƒë∆∞·ª£c t·∫°o l·∫°i - t·ª± t·∫°o v√† t·ª± l√†m', 
  '3e1aa0d1-d98a-4eb5-b8ff-5e8956757535', 
  '3e1aa0d1-d98a-4eb5-b8ff-5e8956757535', 
  'in_progress', 'high', 'meeting', 'HN'
),
(
  'Task Test 3 - Nguy·ªÖn M·∫°nh Linh (Restored)', 
  'Task test th·ª© 3 ƒë·ªÉ ƒë·∫£m b·∫£o c√≥ ƒë·ªß data', 
  '3e1aa0d1-d98a-4eb5-b8ff-5e8956757535', 
  '3e1aa0d1-d98a-4eb5-b8ff-5e8956757535', 
  'completed', 'low', 'other', 'HN'
);
`);

  console.log('-- üîß 3. T·∫†O TASKS CHO C√ÅC USER KH√ÅC (ƒë·ªÉ test ph√¢n quy·ªÅn)');
  console.log(`
-- T·∫°o tasks cho c√°c user kh√°c ƒë·ªÉ test RLS
INSERT INTO tasks (
  name, description, created_by_id, assigned_to_id, 
  status, priority, work_type, department
) VALUES 
(
  'Task c·ªßa Nguy·ªÖn Th·ªã Nga (Test RLS)', 
  'Task n√†y ch·ªâ Nga m·ªõi th·∫•y ƒë∆∞·ª£c', 
  (SELECT id FROM users WHERE name = 'Nguy·ªÖn Th·ªã Nga' LIMIT 1), 
  (SELECT id FROM users WHERE name = 'Nguy·ªÖn Th·ªã Nga' LIMIT 1), 
  'pending', 'medium', 'other', 'HN'
),
(
  'Task c·ªßa H√† Nguy·ªÖn Thanh Tuy·ªÅn (Test RLS)', 
  'Task n√†y ch·ªâ Tuy·ªÅn m·ªõi th·∫•y ƒë∆∞·ª£c', 
  (SELECT id FROM users WHERE name = 'H√† Nguy·ªÖn Thanh Tuy·ªÅn' LIMIT 1), 
  (SELECT id FROM users WHERE name = 'H√† Nguy·ªÖn Thanh Tuy·ªÅn' LIMIT 1), 
  'pending', 'low', 'other', 'HN'
),
(
  'Task c·ªßa Nguy·ªÖn Ng·ªçc Vi·ªát Khanh (Test RLS)', 
  'Task n√†y ch·ªâ Khanh m·ªõi th·∫•y ƒë∆∞·ª£c', 
  (SELECT id FROM users WHERE name = 'Nguy·ªÖn Ng·ªçc Vi·ªát Khanh' LIMIT 1), 
  (SELECT id FROM users WHERE name = 'Nguy·ªÖn Ng·ªçc Vi·ªát Khanh' LIMIT 1), 
  'in_progress', 'high', 'meeting', 'HN'
);
`);

  console.log('-- üîß 4. TEST FUNCTIONS');
  console.log(`
-- Test set v√† get context functions
DO $$
DECLARE
  test_user_id UUID := '3e1aa0d1-d98a-4eb5-b8ff-5e8956757535';
  result_user_id UUID;
BEGIN
  -- Test set context
  PERFORM set_user_context(test_user_id);
  
  -- Test get context
  result_user_id := get_current_user_id_from_context();
  
  -- Log results
  RAISE NOTICE 'TEST RESULTS:';
  RAISE NOTICE 'Input user ID: %', test_user_id;
  RAISE NOTICE 'Output user ID: %', result_user_id;
  RAISE NOTICE 'Match: %', CASE WHEN test_user_id = result_user_id THEN 'YES' ELSE 'NO' END;
END $$;
`);

  console.log('-- üîß 5. VERIFY DATA');
  console.log(`
-- Ki·ªÉm tra tasks ƒë√£ ƒë∆∞·ª£c t·∫°o
SELECT 
  id, 
  name, 
  created_by_id,
  (SELECT name FROM users WHERE id = tasks.created_by_id) as creator_name,
  status
FROM tasks 
ORDER BY created_at DESC;
`);

  console.log('='.repeat(80));
  console.log('\nüîß H∆Ø·ªöNG D·∫™N TH·ª∞C HI·ªÜN:');
  console.log('1. Copy to√†n b·ªô SQL ·ªü tr√™n');
  console.log('2. Paste v√†o Supabase SQL Editor');
  console.log('3. Click "Run"');
  console.log('4. Ki·ªÉm tra k·∫øt qu·∫£ test functions - ph·∫£i th·∫•y "Match: YES"');
  console.log('5. Ki·ªÉm tra query cu·ªëi - ph·∫£i th·∫•y 6 tasks m·ªõi');
  console.log('6. Refresh trang web app');
  console.log('7. ƒêƒÉng nh·∫≠p v·ªõi Nguy·ªÖn M·∫°nh Linh');

  console.log('\nüß™ K·∫æT QU·∫¢ MONG ƒê·ª¢I:');
  console.log('üìã Test functions: Match = YES');
  console.log('üìã Query cu·ªëi: 6 tasks (3 c·ªßa Nguy·ªÖn M·∫°nh Linh + 3 c·ªßa users kh√°c)');
  console.log('üìã Nguy·ªÖn M·∫°nh Linh: Ch·ªâ th·∫•y 3 tasks c·ªßa m√¨nh');
  console.log('üìã Users kh√°c: Ch·ªâ th·∫•y tasks c·ªßa h·ªç');

  console.log('\n‚ö†Ô∏è  QUAN TR·ªåNG:');
  console.log('- Functions ƒë√£ ƒë∆∞·ª£c fix v·ªõi debug logs chi ti·∫øt');
  console.log('- Test data ƒë√£ ƒë∆∞·ª£c t·∫°o l·∫°i');
  console.log('- N·∫øu v·∫´n c√≥ v·∫•n ƒë·ªÅ, check console logs ƒë·ªÉ debug');
  console.log('- Sau khi test OK, c√≥ th·ªÉ t·∫Øt debug logs');

  console.log('\nüîç DEBUG TIPS:');
  console.log('- M·ªü browser console ƒë·ªÉ xem debug logs');
  console.log('- N·∫øu function test fail, c√≥ v·∫•n ƒë·ªÅ v·ªõi PostgreSQL settings');
  console.log('- N·∫øu RLS kh√¥ng ho·∫°t ƒë·ªông, check policies');
}

// Ch·∫°y script
if (require.main === module) {
  restoreTasksAndFixContext();
}

module.exports = { restoreTasksAndFixContext };
