#!/usr/bin/env node

/**
 * üßπ CLEAN AND CREATE POLICIES
 * X√≥a t·∫•t c·∫£ policies c≈© v√† t·∫°o m·ªõi ho√†n to√†n
 */

async function cleanAndCreatePolicies() {
  console.log('üßπ X√≥a t·∫•t c·∫£ policies c≈© v√† t·∫°o m·ªõi...\n');

  console.log('üìù SQL c·∫ßn ch·∫°y trong Supabase SQL Editor:\n');
  console.log('='.repeat(80));
  
  console.log('-- üßπ CLEAN ALL EXISTING POLICIES FIRST');
  console.log(`
-- X√≥a T·∫§T C·∫¢ policies hi·ªán t·∫°i cho b·∫£ng tasks
DROP POLICY IF EXISTS "Allow all operations on tasks" ON tasks;
DROP POLICY IF EXISTS "Enable all operations on tasks" ON tasks;
DROP POLICY IF EXISTS "Allow read with app filtering" ON tasks;
DROP POLICY IF EXISTS "Allow read for app functionality" ON tasks;
DROP POLICY IF EXISTS "Allow task creation" ON tasks;
DROP POLICY IF EXISTS "Allow task updates" ON tasks;
DROP POLICY IF EXISTS "Allow task deletion" ON tasks;
DROP POLICY IF EXISTS "Restrict task creation" ON tasks;
DROP POLICY IF EXISTS "Restrict task updates" ON tasks;
DROP POLICY IF EXISTS "Temporary lockdown" ON tasks;
DROP POLICY IF EXISTS "temp_test_policy" ON tasks;

-- X√≥a c√°c secure policies c≈©
DROP POLICY IF EXISTS "secure_view_own_created_tasks" ON tasks;
DROP POLICY IF EXISTS "secure_view_assigned_tasks" ON tasks;
DROP POLICY IF EXISTS "secure_team_leaders_view_team_tasks" ON tasks;
DROP POLICY IF EXISTS "secure_directors_view_all_tasks" ON tasks;
DROP POLICY IF EXISTS "secure_create_own_tasks" ON tasks;
DROP POLICY IF EXISTS "secure_update_own_or_assigned_tasks" ON tasks;
DROP POLICY IF EXISTS "secure_delete_own_or_team_tasks" ON tasks;

-- X√≥a c√°c policies kh√°c c√≥ th·ªÉ t·ªìn t·∫°i
DROP POLICY IF EXISTS "Users can view their own created tasks" ON tasks;
DROP POLICY IF EXISTS "Users can view assigned tasks" ON tasks;
DROP POLICY IF EXISTS "Users can view public tasks in same department" ON tasks;
DROP POLICY IF EXISTS "Users can view team tasks in same team" ON tasks;
DROP POLICY IF EXISTS "Directors can view all tasks" ON tasks;
DROP POLICY IF EXISTS "Users can create tasks" ON tasks;
DROP POLICY IF EXISTS "Users can update their own tasks" ON tasks;
DROP POLICY IF EXISTS "Assigned users can update task status" ON tasks;
DROP POLICY IF EXISTS "Users can delete their own tasks" ON tasks;
DROP POLICY IF EXISTS "Directors can delete any task" ON tasks;
DROP POLICY IF EXISTS "Custom auth: Users can view their own created tasks" ON tasks;
DROP POLICY IF EXISTS "Custom auth: Users can view assigned tasks" ON tasks;
`);

  console.log('-- üîí CREATE BRAND NEW SECURE POLICIES');
  console.log(`
-- Policy 1: Users can view tasks they created
CREATE POLICY "final_view_own_created_tasks" ON tasks
  FOR SELECT USING (
    created_by_id::text = current_setting('app.current_user_id', true)
  );

-- Policy 2: Users can view tasks assigned to them
CREATE POLICY "final_view_assigned_tasks" ON tasks
  FOR SELECT USING (
    assigned_to_id::text = current_setting('app.current_user_id', true)
  );

-- Policy 3: Team leaders can view all tasks in their team
CREATE POLICY "final_team_leaders_view_team_tasks" ON tasks
  FOR SELECT USING (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id::text = current_setting('app.current_user_id', true)
      AND role = 'team_leader'
      AND team_id = tasks.team_id
    )
  );

-- Policy 4: Directors can view all tasks
CREATE POLICY "final_directors_view_all_tasks" ON tasks
  FOR SELECT USING (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id::text = current_setting('app.current_user_id', true)
      AND role = 'retail_director'
    )
  );

-- Policy 5: Users can create tasks (must set themselves as creator)
CREATE POLICY "final_create_own_tasks" ON tasks
  FOR INSERT WITH CHECK (
    created_by_id::text = current_setting('app.current_user_id', true)
  );

-- Policy 6: Users can update their own tasks or assigned tasks
CREATE POLICY "final_update_own_or_assigned_tasks" ON tasks
  FOR UPDATE USING (
    created_by_id::text = current_setting('app.current_user_id', true)
    OR assigned_to_id::text = current_setting('app.current_user_id', true)
  );

-- Policy 7: Users can delete their own tasks, team leaders can delete team tasks
CREATE POLICY "final_delete_own_or_team_tasks" ON tasks
  FOR DELETE USING (
    created_by_id::text = current_setting('app.current_user_id', true)
    OR EXISTS (
      SELECT 1 FROM users 
      WHERE id::text = current_setting('app.current_user_id', true)
      AND (
        role = 'retail_director' 
        OR (role = 'team_leader' AND team_id = tasks.team_id)
      )
    )
  );
`);

  console.log('-- ‚úÖ ENABLE RLS AND VERIFY');
  console.log(`
-- ƒê·∫£m b·∫£o RLS ƒë∆∞·ª£c b·∫≠t
ALTER TABLE tasks ENABLE ROW LEVEL SECURITY;

-- Ki·ªÉm tra policies ƒë√£ t·∫°o
SELECT schemaname, tablename, policyname, permissive, roles, cmd, qual 
FROM pg_policies 
WHERE tablename = 'tasks'
ORDER BY policyname;
`);

  console.log('='.repeat(80));
  console.log('\nüîß H∆Ø·ªöNG D·∫™N TH·ª∞C HI·ªÜN:');
  console.log('1. Copy to√†n b·ªô SQL ·ªü tr√™n');
  console.log('2. Paste v√†o Supabase SQL Editor');
  console.log('3. Click "Run"');
  console.log('4. Ki·ªÉm tra k·∫øt qu·∫£ query cu·ªëi c√πng - ph·∫£i th·∫•y 7 policies m·ªõi');
  console.log('5. Refresh trang web app');
  console.log('6. Test v·ªõi Nguy·ªÖn M·∫°nh Linh');

  console.log('\nüß™ K·∫æT QU·∫¢ MONG ƒê·ª¢I:');
  console.log('üìã Query cu·ªëi c√πng s·∫Ω hi·ªÉn th·ªã 7 policies:');
  console.log('   - final_view_own_created_tasks');
  console.log('   - final_view_assigned_tasks');
  console.log('   - final_team_leaders_view_team_tasks');
  console.log('   - final_directors_view_all_tasks');
  console.log('   - final_create_own_tasks');
  console.log('   - final_update_own_or_assigned_tasks');
  console.log('   - final_delete_own_or_team_tasks');

  console.log('\nüìã Nguy·ªÖn M·∫°nh Linh s·∫Ω ch·ªâ th·∫•y:');
  console.log('   ‚úÖ 2 test tasks c·ªßa m√¨nh');
  console.log('   ‚ùå KH√îNG th·∫•y tasks c·ªßa ng∆∞·ªùi kh√°c');

  console.log('\n‚ö†Ô∏è  QUAN TR·ªåNG:');
  console.log('- T√™n policies m·ªõi b·∫Øt ƒë·∫ßu v·ªõi "final_" ƒë·ªÉ tr√°nh tr√πng');
  console.log('- ƒê√¢y l√† b·∫£n cu·ªëi c√πng, ƒë√£ x√≥a s·∫°ch t·∫•t c·∫£ policies c≈©');
  console.log('- N·∫øu v·∫´n c√≥ l·ªói, b√°o ngay ƒë·ªÉ t√¥i debug');
}

// Ch·∫°y script
if (require.main === module) {
  cleanAndCreatePolicies();
}

module.exports = { cleanAndCreatePolicies };
