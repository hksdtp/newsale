#!/usr/bin/env node

/**
 * üîí CREATE FINAL SECURE POLICIES
 * T·∫°o policies b·∫£o m·∫≠t cu·ªëi c√πng - m·ªói user ch·ªâ th·∫•y tasks c·ªßa m√¨nh
 */

async function createFinalSecurePolicies() {
  console.log('üîí T·∫°o FINAL SECURE POLICIES cho b·∫£ng tasks...\n');

  console.log('üìù SQL c·∫ßn ch·∫°y trong Supabase SQL Editor:\n');
  console.log('='.repeat(80));
  
  console.log('-- üîí FINAL SECURE RLS POLICIES FOR TASKS TABLE');
  console.log('-- M·ªói user ch·ªâ th·∫•y tasks c·ªßa m√¨nh, team leaders th·∫•y tasks c·ªßa team');
  console.log('');

  // 1. X√≥a policy t·∫°m th·ªùi
  console.log('-- 1. X√ìA POLICY T·∫†M TH·ªúI');
  console.log(`
DROP POLICY IF EXISTS "temp_test_policy" ON tasks;
`);

  // 2. T·∫°o secure policies
  console.log('-- 2. T·∫†O SECURE POLICIES');
  console.log(`
-- Policy 1: Users can view tasks they created
CREATE POLICY "secure_view_own_created_tasks" ON tasks
  FOR SELECT USING (
    created_by_id::text = current_setting('app.current_user_id', true)
  );

-- Policy 2: Users can view tasks assigned to them
CREATE POLICY "secure_view_assigned_tasks" ON tasks
  FOR SELECT USING (
    assigned_to_id::text = current_setting('app.current_user_id', true)
  );

-- Policy 3: Team leaders can view all tasks in their team
CREATE POLICY "secure_team_leaders_view_team_tasks" ON tasks
  FOR SELECT USING (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id::text = current_setting('app.current_user_id', true)
      AND role = 'team_leader'
      AND team_id = tasks.team_id
    )
  );

-- Policy 4: Directors can view all tasks
CREATE POLICY "secure_directors_view_all_tasks" ON tasks
  FOR SELECT USING (
    EXISTS (
      SELECT 1 FROM users 
      WHERE id::text = current_setting('app.current_user_id', true)
      AND role = 'retail_director'
    )
  );

-- Policy 5: Users can create tasks (must set themselves as creator)
CREATE POLICY "secure_create_own_tasks" ON tasks
  FOR INSERT WITH CHECK (
    created_by_id::text = current_setting('app.current_user_id', true)
  );

-- Policy 6: Users can update their own tasks or assigned tasks
CREATE POLICY "secure_update_own_or_assigned_tasks" ON tasks
  FOR UPDATE USING (
    created_by_id::text = current_setting('app.current_user_id', true)
    OR assigned_to_id::text = current_setting('app.current_user_id', true)
  );

-- Policy 7: Users can delete their own tasks, team leaders can delete team tasks
CREATE POLICY "secure_delete_own_or_team_tasks" ON tasks
  FOR DELETE USING (
    created_by_id::text = current_setting('app.current_user_id', true)
    OR EXISTS (
      SELECT 1 FROM users 
      WHERE id::text = current_setting('app.current_user_id', true)
      AND (
        role = 'retail_director' 
        OR (role = 'team_leader' AND team_id = tasks.team_id)
      )
    )
  );
`);

  console.log('-- 3. ƒê·∫¢M B·∫¢O RLS ƒê∆Ø·ª¢C B·∫¨T');
  console.log(`
-- ƒê·∫£m b·∫£o RLS ƒë∆∞·ª£c b·∫≠t
ALTER TABLE tasks ENABLE ROW LEVEL SECURITY;
`);

  console.log('='.repeat(80));
  console.log('\nüîß H∆Ø·ªöNG D·∫™N TH·ª∞C HI·ªÜN:');
  console.log('1. Copy to√†n b·ªô SQL ·ªü tr√™n');
  console.log('2. Paste v√†o Supabase SQL Editor');
  console.log('3. Click "Run"');
  console.log('4. Refresh trang web app');
  console.log('5. Test v·ªõi c√°c t√†i kho·∫£n kh√°c nhau');

  console.log('\nüß™ K·∫æT QU·∫¢ MONG ƒê·ª¢I:');
  console.log('üìã Nguy·ªÖn M·∫°nh Linh (employee):');
  console.log('   ‚úÖ Th·∫•y: 2 test tasks c·ªßa m√¨nh');
  console.log('   ‚ùå KH√îNG th·∫•y: Tasks c·ªßa ng∆∞·ªùi kh√°c');
  
  console.log('\nüìã Nguy·ªÖn Th·ªã Nga (team_leader):');
  console.log('   ‚úÖ Th·∫•y: Tasks c·ªßa m√¨nh + tasks trong team');
  console.log('   ‚ùå KH√îNG th·∫•y: Tasks c·ªßa team kh√°c');

  console.log('\nüìã Retail Director (n·∫øu c√≥):');
  console.log('   ‚úÖ Th·∫•y: T·∫§T C·∫¢ tasks');

  console.log('\n‚ö†Ô∏è  QUAN TR·ªåNG:');
  console.log('- Sau khi ch·∫°y SQL n√†y, m·ªói user ch·ªâ th·∫•y tasks ph√π h·ª£p v·ªõi quy·ªÅn h·∫°n');
  console.log('- ƒê√¢y l√† b·∫£o m·∫≠t CH√çNH TH·ª®C, kh√¥ng c√≤n policy t·∫°m th·ªùi');
  console.log('- N·∫øu c√≥ v·∫•n ƒë·ªÅ, b√°o ngay ƒë·ªÉ ƒëi·ªÅu ch·ªânh');

  console.log('\nüîç DEBUG:');
  console.log('- N·∫øu user kh√¥ng th·∫•y tasks n√†o: Ki·ªÉm tra user context c√≥ ƒë∆∞·ª£c set kh√¥ng');
  console.log('- N·∫øu th·∫•y qu√° nhi·ªÅu tasks: C√≥ th·ªÉ c√≤n policy c≈©, c·∫ßn x√≥a');
  console.log('- Ki·ªÉm tra console logs ƒë·ªÉ debug');
}

// Ch·∫°y script
if (require.main === module) {
  createFinalSecurePolicies();
}

module.exports = { createFinalSecurePolicies };
